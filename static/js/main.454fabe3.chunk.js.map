{"version":3,"sources":["Components/Form/styles.module.css","Components/ContactsList/ListItem/styles.module.css","Components/ContactsList/styles.module.css","Components/Filter/styles.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-selector.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ListItem/ListItem.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","postContact","createAsyncThunk","a","name","number","rejectWithValue","contact","post","then","responce","data","fetchContacts","_","get","deleteContact","id","delete","contactsReducer","createReducer","fulfilled","state","payload","newContacts","filter","item","console","log","filterReducer","action","loaderReducer","pending","rejected","errorReducer","contacts","combineReducers","loader","error","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","getContacts","getFilter","getLoader","getFilteredContacts","createSelector","filterValue","toLowerCase","includes","ConctactsList","children","useSelector","className","styles","contactsList","Form","useState","setName","setNumber","dispatch","useDispatch","inputHandler","evt","target","value","formReset","IdName","shortid","generate","IdNumber","onSubmit","preventDefault","map","find","alert","formLabel","htmlFor","formInput","type","pattern","title","onChange","required","submitBtn","Filter","inputId","filterLabel","filterInput","e","ListItem","useEffect","listItem","itemText","deleteBtn","onClick","connect","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.454fabe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"styles_submitBtn__3eOU2\",\"formLabel\":\"styles_formLabel__31yg7\",\"formInput\":\"styles_formInput__2oo-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__3i9ct\",\"itemText\":\"styles_itemText__1-9zU\",\"deleteBtn\":\"styles_deleteBtn__9W0Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"styles_contactsList__2Xe5q\",\"loader\":\"styles_loader__3J7Ev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"styles_filterLabel__1mqPc\",\"filterInput\":\"styles_filterInput__23LdU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4041';\n\nexport const postContact = createAsyncThunk('contacts/addContact',\n    async ({ name, number }, {rejectWithValue}) => {\n        try {\n            const contact = {\n            name: name,\n            number: number,\n        };\n        const responce = await axios.post('/contacts', contact)\n            .then(responce => responce.data);\n        return responce\n        } catch (error) {\n            return rejectWithValue(error)\n        };\n    });\n\nexport const fetchContacts = createAsyncThunk('contacts/getContacts',\n    async (_, {rejectWithValue}) => {\n        try {\n        const responce = await axios.get('/contacts')\n            .then(responce => responce.data);\n        return responce\n        } catch (error) {\n            return rejectWithValue(error)\n        };\n    });\n\nexport const deleteContact = createAsyncThunk('contacts/deleteContact',\n    async (id, {rejectWithValue}) => {\n        try {\n            await axios.delete(`/contacts/${id}`);\n            return id;\n        } catch (error) {\n            return rejectWithValue(error)\n        };\n    });","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { changeFilter } from './contacts-actions';\n\nimport { postContact, fetchContacts, deleteContact } from './contacts-operations';\n\nconst contactsReducer = createReducer([], {\n    [postContact.fulfilled]: (state, { payload }) =>  [...state, payload],\n    [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\n\n    [deleteContact.fulfilled]: (state, { payload }) => {\n        const newContacts = state.filter((item) => item.id !== payload);\n        console.log(newContacts, 'new contacts')\n        return newContacts;\n    },\n});\n\nconst filterReducer = createReducer('', {\n    [changeFilter]: (_, action) => action.payload\n});\n\nconst loaderReducer = createReducer(false, {\n    [postContact.pending]: () => true,\n    [postContact.fulfilled]: () => false,\n    [postContact.rejected]: () => false,\n\n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n    \n});\n\nconst errorReducer = createReducer(null, {\n    [postContact.rejected]: (_, { payload }) => payload,\n    [fetchContacts.rejected]: (_, { payload }) => payload,\n    [deleteContact.rejected]: (_, { payload }) => payload,\n    [postContact.pending]: null,\n    [fetchContacts.pending]: null,\n    [deleteContact.pending]: null\n})\n\nexport const contacts = combineReducers({\n    contacts: contactsReducer,\n    filter: filterReducer,\n    loader: loaderReducer,\n    error: errorReducer,\n})\n","import { configureStore} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport { contacts } from './contacts/contacts-reducers';\n\nconst store = configureStore({\n    reducer: contacts,\n    middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(), logger],\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport { store };","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\nexport const getLoader = (state) => state.loader;\n\nexport const getFilteredContacts = createSelector(\n    [getFilter, getContacts],\n    (filterValue, contacts) => {\n        return contacts.filter((item) =>\n            item.name.toLowerCase().includes(filterValue.toLowerCase()));\n    }\n);","import PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\nimport { getLoader } from \"redux/contacts/contacts-selector\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ConctactsList({ children }) {\r\n  const loader = useSelector(getLoader);\r\n  \r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {loader && <h4 className={styles.loader}>Loading your contacts...</h4>}\r\n      {children}\r\n    </ul>\r\n  );\r\n}\r\n\r\nConctactsList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ConctactsList;","import { useState } from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { getContacts } from \"redux/contacts/contacts-selector\";\r\nimport { postContact } from \"redux/contacts/contacts-operations\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandler = (evt) => {\r\n    switch (evt.target.name) {\r\n\r\n      case \"name\":\r\n        setName(evt.target.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(evt.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitHanlder = (evt) => {\r\n    evt.preventDefault();\r\n    const namesToLowerCase = contacts.map((item) => item.name.toLowerCase());\r\n\r\n    if (namesToLowerCase.find((item) => item === name.toLowerCase())) {\r\n      alert(\"please change name\");\r\n      setName('');\r\n      return \r\n    };\r\n\r\n    const contact = {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n    };\r\n\r\n    dispatch(postContact(contact));\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const IdName = shortid.generate();\r\n  const IdNumber = shortid.generate();\r\n\r\n  return (\r\n    <form onSubmit={submitHanlder}>\r\n      <label className={styles.formLabel} htmlFor={IdName}>\r\n        Name\r\n        <input\r\n          id={IdName}\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={inputHandler}\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel} htmlFor={IdNumber}>\r\n        Number\r\n        <input\r\n          id={IdNumber}\r\n          className={styles.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={inputHandler}\r\n          value={number}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.submitBtn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selector'\r\n\r\nimport shortid from \"shortid\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  const inputId = shortid.generate();\r\n  return (\r\n    <label className={styles.filterLabel} htmlFor={inputId}>\r\n      Search\r\n      <input\r\n        id={inputId}\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilteredContacts } from \"redux/contacts/contacts-selector\";\r\nimport { fetchContacts, deleteContact } from \"redux/contacts/contacts-operations\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction ListItem() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts())\r\n  }, [dispatch]);\r\n\r\n  return contacts.map((item) => console.log('kek') || (\r\n    <li className={styles.listItem} key={item.id}>\r\n      <p className={styles.itemText}>\r\n        {item.name}: {item.number}\r\n      </p>\r\n      <button\r\n        className={styles.deleteBtn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteContact(item.id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\n\r\nexport default ListItem;","import { connect } from \"react-redux\";\r\n\r\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\r\nimport Form from \"./Components/Form\";\r\nimport Filter from \"./Components/Filter\";\r\nimport ListItem from \"./Components/ContactsList/ListItem\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Form />\r\n      <Filter />\r\n      <ContactsList>\r\n        <ListItem  />\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null)(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './redux/store';\r\nimport \"modern-normalize\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}